services:
  bot:
    image: nikijaz/agh-bot:latest
    container_name: agh-bot
    restart: unless-stopped
    environment:
      PYTHONUNBUFFERED: 1
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    env_file:
      - .env
    volumes:
      - ./anecdotes.txt:/app/anecdotes.txt:ro
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
    command: --interval 60 agh-bot

volumes:
  postgres-data:
