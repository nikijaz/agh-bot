name: "CI/CD"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  python:
    name: "Python: Lint & Typecheck"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: "Install dependencies"
        run: uv sync --locked

      - name: "Cache MyPy"
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            mypy-${{ runner.os }}-

      - name: "MyPy: Typecheck"
        run: uv run mypy .
    
      - name: "Ruff: Static Analysis"
        run: uv run ruff check .

      - name: "Ruff: Format Check"
        run: uv run ruff format --check .

  docker:
    name: "Docker: Build & Push Image"
    runs-on: ubuntu-latest
    needs: python
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Extract Docker image metadata"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest

      - name: "Log in to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      
      - name: "Build and push Docker image"
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
